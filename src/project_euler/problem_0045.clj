(ns project-euler.problem_0045)

;; Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

;; Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
;; Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
;; Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
;; It can be verified that T285 = P165 = H143 = 40755.

;; Find the next triangle number that is also pentagonal and hexagonal.

(defn triangle [n] (/ (* n (inc n)) 2))

(defn is-triangle? [t]
  (let [delta (+ 0.25 (* 2 t))
        x (int (+ 0.5 (- (Math/sqrt delta) 0.5)))]
    (== t (triangle x))))

(defn pentagonal [n] (/ (* n (- (* 3 n) 1)) 2))

(defn is-pentagonal? [p]
  (let [delta (+ 0.25 (* 6 p))
        x (int (+ 0.5 (/ (+ 0.5 (Math/sqrt delta)) 3)))]
    (== p (pentagonal x))))

(defn hexagonal [n] (* n (- (* 2 n) 1)))

(defn is-hexagonal? [h]
  (let [delta (+ 1 (* 8 h))
        x (int (+ 0.5 (/ (+ 1 (Math/sqrt delta)) 4)))]
    (== h (hexagonal x))))

(defn solution []
  (->> (iterate inc 1)
       (map hexagonal)
       (filter is-pentagonal?)
       (filter is-triangle?)
       (#(nth % 2))
       ))

(solution)

;;-> 1533776805



