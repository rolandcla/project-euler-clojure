(ns project-euler.problem_0012)

;; The sequence of triangle numbers is generated by adding the natural numbers.
;; So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
;; The first ten terms would be:

;; 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

;; Let us list the factors of the first seven triangle numbers:

;;  1: 1
;;  3: 1,3
;;  6: 1,2,3,6
;; 10: 1,2,5,10
;; 15: 1,3,5,15
;; 21: 1,3,7,21
;; 28: 1,2,4,7,14,28
;; We can see that 28 is the first triangle number to have over five divisors.

;; What is the value of the first triangle number to have over five hundred divisors?

(defn for-triangles-do
  [f]
  (loop [tr 1, i 2]
    (or (f tr)
        (recur (+ tr i) (inc i)) )))

(defn factors
  [x]
  (->> (range 1 (inc (int (Math/sqrt x))))
       (filter #(== 0 (rem x %)))
       (mapcat #(let [q (/ x %)]
                  (if (== q %) [%] [% q])))
       ))

(defn solution []
  (for-triangles-do (fn [tr]
                      (and (> (count (factors tr)) 500) tr))))

;;-> 76576500

